$date
	Wed Feb 24 18:16:28 2016
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module ser_64_16_tb $end
$var wire 1 ! valid_out $end
$var wire 1 " stop_out $end
$var wire 16 # outdata [15:0] $end
$var reg 1 $ clk $end
$var reg 64 % indata [63:0] $end
$var reg 1 & res_n $end
$var reg 1 ' stop_in $end
$var reg 1 ( valid_in $end
$var integer 32 ) read [31:0] $end
$var integer 32 * write [31:0] $end
$scope module ser_64_16_I $end
$var wire 1 $ clk $end
$var wire 16 + rdata [15:0] $end
$var wire 1 & res_n $end
$var wire 1 , shift_in $end
$var wire 1 ' stop_in $end
$var wire 1 ( valid_in $end
$var wire 64 - wdata [63:0] $end
$var wire 1 ! valid_out $end
$var wire 1 " stop_out $end
$var wire 1 . shift_out $end
$var wire 6 / filled [5:0] $end
$var integer 32 0 j [31:0] $end
$scope begin foobar[0] $end
$scope module stage_I $end
$var wire 1 $ clk $end
$var wire 16 1 fill_in [15:0] $end
$var wire 16 2 fwd_in [15:0] $end
$var wire 1 3 next_filled $end
$var wire 1 4 prev_filled $end
$var wire 1 & res_n $end
$var wire 1 , shift_in $end
$var wire 1 . shift_out $end
$var reg 16 5 data_out [15:0] $end
$var reg 1 6 filled $end
$upscope $end
$upscope $end
$scope begin foobar[1] $end
$scope module stage_I $end
$var wire 1 $ clk $end
$var wire 16 7 fill_in [15:0] $end
$var wire 16 8 fwd_in [15:0] $end
$var wire 1 9 next_filled $end
$var wire 1 : prev_filled $end
$var wire 1 & res_n $end
$var wire 1 , shift_in $end
$var wire 1 . shift_out $end
$var reg 16 ; data_out [15:0] $end
$var reg 1 < filled $end
$upscope $end
$upscope $end
$scope begin foobar[2] $end
$scope module stage_I $end
$var wire 1 $ clk $end
$var wire 16 = fill_in [15:0] $end
$var wire 16 > fwd_in [15:0] $end
$var wire 1 ? next_filled $end
$var wire 1 @ prev_filled $end
$var wire 1 & res_n $end
$var wire 1 , shift_in $end
$var wire 1 . shift_out $end
$var reg 16 A data_out [15:0] $end
$var reg 1 B filled $end
$upscope $end
$upscope $end
$scope begin foobar[3] $end
$scope module stage_I $end
$var wire 1 $ clk $end
$var wire 16 C fill_in [15:0] $end
$var wire 16 D fwd_in [15:0] $end
$var wire 1 E next_filled $end
$var wire 1 F prev_filled $end
$var wire 1 & res_n $end
$var wire 1 , shift_in $end
$var wire 1 . shift_out $end
$var reg 16 G data_out [15:0] $end
$var reg 1 H filled $end
$upscope $end
$upscope $end
$upscope $end
$scope task check_ser_64_16 $end
$var reg 16 I expected_outdata [15:0] $end
$var reg 1 J expected_stop_out $end
$var reg 1 K expected_valid_out $end
$var reg 16 L outdata [15:0] $end
$var reg 1 M stop_out $end
$var reg 1 N valid_out $end
$upscope $end
$scope task defeat $end
$upscope $end
$scope task fail $end
$upscope $end
$scope task pass $end
$upscope $end
$scope task resync $end
$upscope $end
$scope task success $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xN
xM
bx L
xK
xJ
bx I
0H
b0 G
0F
1E
b0 D
b0 C
0B
b0 A
0@
0?
b0 >
b0 =
0<
b0 ;
0:
09
b0 8
b0 7
06
b0 5
04
03
b1111111111111111 2
b0 1
bx 0
b100000 /
1.
b0 -
0,
b0 +
b0 *
b0 )
0(
0'
0&
b0 %
1$
b0 #
0"
0!
$end
#1
b101 0
#5
b1011000000001011 1
b1011101010111110 7
b1100101011111110 =
b1010111111111110 C
1,
b1010111111111110110010101111111010111010101111101011000000001011 %
b1010111111111110110010101111111010111010101111101011000000001011 -
b100 *
1(
1&
b1 )
0K
0N
0J
0M
b0 L
0$
#10
0,
1"
1!
1?
1F
19
1@
13
1:
1H
b1010111111111110 #
b1010111111111110 +
b1010111111111110 G
1B
b1100101011111110 A
b1100101011111110 D
1<
b1011101010111110 ;
b1011101010111110 >
b111110 /
16
b1011000000001011 5
b1011000000001011 8
1$
#11
b101 0
#15
b1011111011101111 1
b1101111010101101 7
b1111000000001101 =
b1100000000000001 C
b1100000000000001111100000000110111011110101011011011111011101111 %
b1100000000000001111100000000110111011110101011011011111011101111 -
0$
b10 )
1K
1N
1J
1M
b1100101011111110 I
b1010111111111110 L
#20
0:
b111100 /
06
b1111111111111111 5
b1111111111111111 8
b1011000000001011 ;
b1011000000001011 >
b1011101010111110 A
b1011101010111110 D
b1100101011111110 #
b1100101011111110 +
b1100101011111110 G
1$
#21
b101 0
#25
0$
b11 )
b1011101010111110 I
b1100101011111110 L
#30
0@
03
b1011101010111110 #
b1011101010111110 +
b1011101010111110 G
b1011000000001011 A
b1011000000001011 D
b111000 /
0<
b1111111111111111 ;
b1111111111111111 >
1$
#31
b101 0
#35
0$
b100 )
b1011000000001011 I
b1011101010111110 L
#40
1,
0"
0F
09
b110000 /
0B
b1111111111111111 A
b1111111111111111 D
b1011000000001011 #
b1011000000001011 +
b1011000000001011 G
1$
#41
b101 0
#45
b1000 *
0$
b101 )
0J
0M
b1100000000000001 I
b1011000000001011 L
#50
0,
1"
1F
19
1@
13
1:
b1100000000000001 #
b1100000000000001 +
b1100000000000001 G
1B
b1111000000001101 A
b1111000000001101 D
1<
b1101111010101101 ;
b1101111010101101 >
b111110 /
16
b1011111011101111 5
b1011111011101111 8
1$
#51
b101 0
#55
b1111111011100001 1
b1111101011001110 7
b1111101000010001 =
b1100000011011110 C
b1100000011011110111110100001000111111010110011101111111011100001 %
b1100000011011110111110100001000111111010110011101111111011100001 -
0(
0$
b110 )
1J
1M
b1111000000001101 I
b1100000000000001 L
#60
0:
b111100 /
06
b1111111111111111 5
b1111111111111111 8
b1011111011101111 ;
b1011111011101111 >
b1101111010101101 A
b1101111010101101 D
b1111000000001101 #
b1111000000001101 +
b1111000000001101 G
1$
#61
b101 0
#65
0$
b111 )
b1101111010101101 I
b1111000000001101 L
#70
0@
03
b1101111010101101 #
b1101111010101101 +
b1101111010101101 G
b1011111011101111 A
b1011111011101111 D
b111000 /
0<
b1111111111111111 ;
b1111111111111111 >
1$
#71
b101 0
#75
0$
b1000 )
b1011111011101111 I
b1101111010101101 L
#80
0"
0F
09
b110000 /
0B
b1111111111111111 A
b1111111111111111 D
b1011111011101111 #
b1011111011101111 +
b1011111011101111 G
1$
#81
b101 0
#85
0$
0J
0M
b1100000011011110 I
b1011111011101111 L
#90
0!
0?
b100000 /
0H
b1111111111111111 #
b1111111111111111 +
b1111111111111111 G
1$
#91
b101 0
#95
0$
0K
0N
b1111111111111111 I
b1111111111111111 L
#100
1$
#101
b101 0
#105
1"
0.
1'
0$
#110
1$
#111
b101 0
#115
0$
1J
1M
#120
1$
#121
b101 0
#125
1,
0"
1.
0'
b1100 *
1(
0$
b1001 )
#130
0,
1"
1!
1?
1F
19
1@
13
1:
1H
b1100000011011110 #
b1100000011011110 +
b1100000011011110 G
1B
b1111101000010001 A
b1111101000010001 D
1<
b1111101011001110 ;
b1111101011001110 >
b111110 /
16
b1111111011100001 5
b1111111011100001 8
1$
#131
b101 0
#135
b1100110111101111 1
b1000100110101011 7
b100010101100111 =
b100100011 C
0.
1'
b100100011010001010110011110001001101010111100110111101111 %
b100100011010001010110011110001001101010111100110111101111 -
0(
0$
1K
1N
b1111101000010001 I
b1100000011011110 L
#140
1$
#141
b101 0
#145
0$
b1111111111111111 I
#150
1$
#151
b101 0
#155
1.
0'
1(
0$
b1010 )
#160
0:
b111100 /
06
b1111111111111111 5
b1111111111111111 8
b1111111011100001 ;
b1111111011100001 >
b1111101011001110 A
b1111101011001110 D
b1111101000010001 #
b1111101000010001 +
b1111101000010001 G
1$
#161
b101 0
#165
0.
1'
0$
b1111101011001110 I
b1111101000010001 L
#170
1$
#171
b101 0
#175
0$
b1111111111111111 I
#180
1$
#181
b101 0
#185
1.
0'
0$
b1011 )
#190
0@
03
b1111101011001110 #
b1111101011001110 +
b1111101011001110 G
b1111111011100001 A
b1111111011100001 D
b111000 /
0<
b1111111111111111 ;
b1111111111111111 >
1$
#191
b101 0
#195
0.
1'
0$
b1111111011100001 I
b1111101011001110 L
#200
1$
#201
b101 0
#205
0$
b1111111111111111 I
#210
1$
#211
b101 0
#215
1.
0'
0$
b1100 )
#220
1,
0"
0F
09
b110000 /
0B
b1111111111111111 A
b1111111111111111 D
b1111111011100001 #
b1111111011100001 +
b1111111011100001 G
1$
#221
b101 0
#225
b10000 *
0$
b1101 )
0J
0M
b100100011 I
b1111111011100001 L
#230
0,
1"
1F
19
1@
13
1:
b100100011 #
b100100011 +
b100100011 G
1B
b100010101100111 A
b100010101100111 D
1<
b1000100110101011 ;
b1000100110101011 >
b111110 /
16
b1100110111101111 5
b1100110111101111 8
1$
#231
b101 0
#235
b100010001000100 1
b11001100110011 7
b10001000100010 =
b1000100010001 C
0.
1'
b1000100010001001000100010001000110011001100110100010001000100 %
b1000100010001001000100010001000110011001100110100010001000100 -
0$
1J
1M
b100010101100111 I
b100100011 L
#240
1$
#241
b101 0
#245
0$
b1111111111111111 I
#250
1$
#251
b101 0
#255
1.
0'
0(
0$
b1110 )
#260
0:
b111100 /
06
b1111111111111111 5
b1111111111111111 8
b1100110111101111 ;
b1100110111101111 >
b1000100110101011 A
b1000100110101011 D
b100010101100111 #
b100010101100111 +
b100010101100111 G
1$
#261
b101 0
#265
0$
b1111 )
b1000100110101011 I
b100010101100111 L
#270
0@
03
b1000100110101011 #
b1000100110101011 +
b1000100110101011 G
b1100110111101111 A
b1100110111101111 D
b111000 /
0<
b1111111111111111 ;
b1111111111111111 >
1$
#271
b101 0
#275
0$
b10000 )
b1100110111101111 I
b1000100110101011 L
#280
0"
0F
09
b110000 /
0B
b1111111111111111 A
b1111111111111111 D
b1100110111101111 #
b1100110111101111 +
b1100110111101111 G
1$
#281
b101 0
#285
0$
0J
0M
b1000100010001 I
b1100110111101111 L
